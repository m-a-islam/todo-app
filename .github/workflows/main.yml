name: CI/CD for To-Do App

# This workflow runs on any push or pull request to the 'main' branch.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # The main job that builds, tests, and deploys our application.
  build-and-deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Linux virtual machine.

    steps:
      # 1. Get the code from our repository.
      - name: Checkout code
        uses: actions/checkout@v4

      # --- CI (Continuous Integration) Steps ---

      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Frontend Dependencies & Lint
        run: |
          cd frontend
          npm install --legacy-peer-deps
          npm run lint # This will fail the build if there are linting errors.

      - name: Run Frontend Unit Tests
        run: npm test --prefix frontend

      - name: Build Frontend for Production
        run: npm run build --prefix frontend

      - name: Setup PHP for Backend
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Backend Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --optimize-autoloader -d ./backend

      - name: Run Backend Unit Tests
        run: |
          cp backend/.env.prod backend/.env.test
          sed -i 's/APP_ENV=prod/APP_ENV=test/' backend/.env.test
          ./backend/vendor/bin/phpunit

      # --- CD (Continuous Deployment) Steps ---
      # These steps will only run if we push to the 'main' branch, not on pull requests.

      - name: Login to Docker Hub
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prod # Use our new production Dockerfile.
          push: true
          # Tag the image with 'latest' and also with the short Git commit hash.
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:latest, ${{ secrets.DOCKERHUB_USERNAME }}/todo-app:${{ github.sha }}