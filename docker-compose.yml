version: '3.8'

services:
  # Service 1: The MySQL Database
  db:
    image: mysql:8.0
    container_name: todo-db
    restart: always
    volumes:
      - db-data:/var/lib/mysql # This persists your data even if the container is removed
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      # Expose port 3306 on your host machine to connect with a GUI like DBeaver/TablePlus
      - "33061:3306"

  # Service 2: The Symfony/PHP Application
  app:
    build:
      context: . # Use the current directory as the build context
      dockerfile: docker/backend/Dockerfile # Path to the Dockerfile
    container_name: todo-app-backend
    restart: unless-stopped
    volumes:
      # Mount your local backend code into the container for live code changes
      - ./backend:/var/www/symfony
    environment:
      # This is how Symfony connects to the database.
      # Note we use the service name 'db' as the host.
      DATABASE_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}?serverVersion=8.0"
      TEST_DATABASE_URL: "mysql://root:root@db:3306/${MYSQL_DATABASE}?serverVersion=8.0"


  # Service 3: The Nginx Web Server
  webserver:
    image: nginx:alpine
    container_name: todo-webserver
    restart: unless-stopped
    ports:
      # Expose port 80 of the container to port 8080 on your host machine
      - "8080:80"
    volumes:
      - ./backend:/var/www/symfony
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app # Wait for the 'app' service to start

  # Service 4: The Vue.js Frontend Dev Server
  frontend:
    image: node:20-alpine
    container_name: todo-frontend
    working_dir: /app
    ports:
      # Expose the Vite dev server port (default is 5173)
      - "5173:5173"
    volumes:
      # Mount your local frontend code into the container
      - ./frontend:/app
    # Command to install dependencies (if not already there) and run the dev server
    command: sh -c "npm install && npm run dev"

# Define the named volume for persisting database data
volumes:
  db-data: