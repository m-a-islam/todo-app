# --- Stage 1: Build the Vue.js Frontend ---
# Use a Node.js image to build our static assets.
FROM node:20-alpine AS frontend-builder
WORKDIR /app
# Copy only the package files first for caching
COPY frontend/package*.json ./
RUN npm install
# Copy the rest of the frontend code
COPY frontend/ ./
# Build the production-ready static files (HTML, CSS, JS)
RUN npm run build
# The result will be in the /app/dist folder.


# --- Stage 2: Build the Symfony Backend ---
# Use a PHP image to install our composer dependencies.
FROM composer:2.7 AS backend-builder
WORKDIR /app
COPY backend/ /app/

COPY backend/.env.prod /app/.env
# Install production dependencies only, and optimize the autoloader.
RUN composer install --no-dev --optimize-autoloader --no-scripts


# --- Final Stage: Production Image ---
# Start from a lean Nginx image with PHP-FPM.
FROM trafex/php-nginx:latest
# This image contains Nginx and PHP-FPM configured to work together.

# Copy the built frontend assets from the 'frontend-builder' stage
# into the Nginx public directory.
COPY --from=frontend-builder /app/dist /app/public

# Copy the Symfony application code from the 'backend-builder' stage.
COPY --from=backend-builder /app /app

# Set correct permissions for Symfony's cache and logs.
RUN chown -R nginx:nginx /app/var

# Note: The base image trafex/php-nginx is already configured to
# point Nginx to the /app/public directory and handle .php files.
# This makes our final configuration much simpler.